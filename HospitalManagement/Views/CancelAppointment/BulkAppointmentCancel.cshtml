@model HospitalManagement.Models.CancelAppointmentModel

@{
    /**/

    ViewBag.Title = "BulkAppointmentCancel";
}

<div class="content">
    <div class="row">
        <div class="col-sm-6 col-12">
            <h4 class="page-title">Bulk Appointments Cancel</h4>
        </div>
        <div class="col-sm-6 col-12 text-sm-right m-b-20">
            @*<a href="~/HMSDoctorAppointment/AddHMSDoctorAppointment" class="btn skin-gradient-btn btn-sm float-right"><i class="fa fa-calendar-plus-o"></i>Add Appointment +</a>*@
        </div>
    </div>
    <div class="row filter-row">
        <div class="col-sm-6 col-md-3">
            <div class="form-group form-focus select-focus">
                <label class="focus-label">Day</label>
                <select class="select floating" id="Days" onchange="GetDropdownData()">
                    <option>All Days</option>
                    <option>Today</option>
                    <option>Weekly</option>
                    <option>Custom</option>
                </select>
            </div>
        </div>
        <div class="col-sm-6 col-md-3 collapse" id="colpfrom">
            <div class="form-group form-focus">
                <label class="focus-label">Custom Date</label>
                <input id="datetimepicker11" class="form-control floating" autocomplete="off" readonly>
                <i class="fa fa-calendar"></i>
            </div>
        </div>
        <div class="col-sm-6 col-md-3 collapse" id="colpto">
            <div class="form-group form-focus">
                <label class="focus-label">Custom Date</label>
                <input id="datetimepicker12" onchange="GetDropdownData()" class="form-control floating" autocomplete="off" readonly>
                <i class="fa fa-calendar"></i>
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="form-group form-focus select-focus">
                <label class="focus-label">Doctor</label>
                @Html.ValidationMessageFor(model => model.HosDocCode, "", new { @class = "text-danger" })
                @Html.DropDownListFor(model => model.HosDocCode, new SelectList(Model.DoctorList, "doctor_code", "doctor_name"), "All Doctors", new { @class = "form-control select requiredSelect", onchange = "GetDropdownData()", @id = "hosDoctor" })
            </div>
        </div>
        <div class="col-sm-6 col-md-3">
            <div class="form-group form-focus select-focus">
                <label class="focus-label">Appointment</label>
                <select class="select floating" id="Appointment" onchange="GetDropdownData()">
                    <option>All</option>
                    <option>Online</option>
                    <option>Offline</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row bindtable">
        <div class="col-md-12">


            @using (Ajax.BeginForm("CancelBulkAppointment", "CancelAppointment", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessMethod", LoadingElementId = "progress" }))
            {
            <div class="row">
                <div class="col-md-12">
                    <div class="table-responsive table-scrolling p-t-30">
                        <table class="table table-striped custom-table datatable mb-0">
                            <thead class="thead-light">
                                <tr>
                                    <th><input type="checkbox" id="checkbox_2" onclick="allcheck('allstatuscheck')" />Select All</th>
                                    <th>Patient Name</th>
                                    <th>Age</th>
                                    <th>Doctor Name</th>
                                    <th>Department</th>
                                    <th>Appointment</th>
                                    @*<th>Status</th>*@
                                    @*<th>Register</th>*@


                                </tr>
                            </thead>
                            <tbody>
                                @*@foreach (var item in Model.DoctorCanappointlist)
                        {*@
                                @if (Model.DoctorCanappointlist != null && Model.DoctorCanappointlist.Count > 0)
                                {
                                    for (int i = 0; i < Model.DoctorCanappointlist.Count; i++)
                                    {

                                        <tr id="row_@Model.DoctorCanappointlist[i].AppointmentId" class="table-light">

                                            <td>
                                                @Html.HiddenFor(Model => Model.DoctorCanappointlist[i].AppointmentId)
                                                @Html.CheckBoxFor(Model => Model.DoctorCanappointlist[i].Ctrl, new { @class = "statusclass" })
                                                @*@Html.CheckBox("item.ctrl", new { @class = "statusclass" })*@
                                            </td>
                                            <td>
                                                @{
                                                    var PatProfile = "/wwwroot/assets/img/user.jpg";
                                                    if (Model.DoctorCanappointlist[i].PatientProfile != "" && Model.DoctorCanappointlist[i].PatientProfile != null)
                                                    { PatProfile = System.Configuration.ConfigurationManager.AppSettings["GetPatImgUrl"] + Model.DoctorCanappointlist[i].PatientProfile; }
                                                }
                                                <img class="avatar" src="@PatProfile" alt="User Image"><h2>@Model.DoctorCanappointlist[i].PatientName <span class="d-block text-secondary">@Model.DoctorCanappointlist[i].patient_code</span></h2>
                                            </td>
                                            <td><h2>@Model.DoctorCanappointlist[i].Gender <span class="text-primary">@Model.DoctorCanappointlist[i].PatientAge</span></h2></td>
                                            <td><h2>@Model.DoctorCanappointlist[i].DoctorName <span class="d-block text-secondary">@Model.DoctorCanappointlist[i].HosDocCode</span></h2></td>
                                            <td><span class="d-block text-primary">@Model.DoctorCanappointlist[i].HosDepName</span></td>
                                            <td>
                                                @Model.DoctorCanappointlist[i].AppointmentDate
                                                @if (Model.DoctorCanappointlist[i].IsAppointment == true)
                                                {<b>&nbsp;&nbsp;<i class="fa fa-circle text-success"></i> Online</b> }
                                                else
                                                { <b>&nbsp;&nbsp;<i class="fa fa-circle text-info"></i> Offline</b>}
                                                <span class="d-block text-secondary">@Model.DoctorCanappointlist[i].AppointmentTime</span>
                                            </td>
                                            @*@if (Model.DoctorCanappointlist[i].Ctrl == true)
                                            {
                                                <td class="status-icon"> <i class="fa fa-check text-success" title="Active Appointment"></i></td>
                                            }
                                            @if (Model.DoctorCanappointlist[i].Ctrl == false)
                                            {
                                                <td class="status-icon"> <i class="fa fa-check text-danger" title="Cancel Appointment"></i></td>
                                            }*@

                                            @*<td>
                                        @if (item.ctrl == 1)
                                        {
                                            if (Convert.ToDateTime(item.appointment_date) <= DateTime.Now)
                                            {
                                                <a href="#" onclick="ConfirmRegister(@item.appointment_id)" title="Register Active Appointment" class="skin-gradient-btn action-icon"><i class="fa fa-registered m-r-5"></i></a>
                                            }
                                            else
                                            {
                                                <button href="#" class="btn skin-gradient-btn action-icon" disabled><i class="fa fa-registered"></i></button>
                                            }
                                        }
                                        else
                                        {
                                            <button href="#" class="btn skin-gradient-btn action-icon" disabled><i class="fa fa-registered"></i></button>
                                        }
                                    </td>*@

                                        </tr>
                                        @*}*@
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>


                <div class="col-md-12 mt-3">
                    <label class="text-uppercase font-weight-600">Cancel Reason</label>
                    @Html.TextAreaFor(Model => Model.cancelreason, new { @class = "form-control" })
                </div>
                <div class="col-md-12 text-center mt-3">
                    <button class="btn skin-gradient-btn submit-btn">Cancel Appointment</button>
                </div>
                <div id="cardbox" class="card-box col-md-12 text-center" hidden>
                </div>
            </div>

            }
        </div>

    </div>
</div>
@section scripts{
    <script type="text/javascript">

        //$(".Appointment").addClass("subdrop");
        //$(".Submenu_Appointment").css("display", "block");
        //$(".Submenu_Appointment").css("display", "block");
        //$(".BulkAppointmentCancel").addClass("active");

        $(document).ready(function () {
            $('#datetimepicker11').datetimepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                minView: 2,
                startDate: new Date()
            }).on('changeDate', function (e) {
                debugger;
                ToDate();
                $('.datetimepicker12').val("").datetimepicker('setStartDate', new Date(e.date));
            });

            function ToDate() {
                debugger;
                $('#datetimepicker12').datetimepicker({
                    format: "dd/mm/yyyy",
                    autoclose: true,
                    minView: 2,
                    startDate: new Date()
                });
            }
        });

        function allcheck(type) {
            debugger;
            if (type == 'allselectcheck') {
                if ($("#checkbox_1").is(':checked'))
                    $('.selectClass').prop('checked', true)
                else
                    $('.selectClass').prop('checked', false)
            }
            else if (type == 'allstatuscheck') {
                if ($("#checkbox_2").is(':checked'))
                    $('.statusclass').prop('checked', true)
                else
                    $('.statusclass').prop('checked', false)
            }

    }

     function SuccessMethod(data) {
        debugger;
        var htmlstr = "";
        if (data == "Appointment Cancel Successfully!") {
            $('#cardbox').removeAttr('hidden');
            htmlstr = "<div class='alert alert-success alert-dismissible fade show' role='alert'> <strong>Success!</strong> Your <a href='#' class='alert-link'>Data</a> <span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
        }
        if (data == "Problem ! Appointment Cancelation") {
            $('#cardbox').removeAttr('hidden');
            htmlstr = "<div class='alert alert-danger alert-dismissible fade show' role='alert'><span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
        }
        if (data == "Select atleast one record") {
            $('#cardbox').removeAttr('hidden');
            htmlstr = "<div class='alert alert-warning alert-dismissible fade show' role='alert'> <span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
        }
        

        $("#cardbox").html(htmlstr);
    }

        function GetDropdownData() {
            debugger;
            $('.loadingimg').css('display', 'block');
            var day = $("#Days").val() == 'Select Day' ? 'Select Day' : $("#Days").val();
            var firstDay = new Date();
            var lastDay = new Date();
            if ($('#Days').val() == 'Today') {
                firstDay = new Date().toDateString();
                lastDay = new Date().toDateString();
            }
            if ($('#Days').val() == 'Weekly') {
                var curr = new Date; // get current date
                var first = curr.getDate() - curr.getDay(); // First day is the day of the month - the day of the week
                var last = first + 6; // last day is the first day + 6
                firstDay = new Date(curr.setDate(first)).toUTCString();
                lastDay = new Date(curr.setDate(last)).toUTCString();
            }
            if ($('#Days').val() == 'Custom') {
                $('#colpfrom').removeClass('collapse');
                $('#colpto').removeClass('collapse');

                if ($('#datetimepicker11').val() != null && $('#datetimepicker11').val() != "") {
                    var from = $("#datetimepicker11").val().split("/")
                    var f = new Date(from[2], from[1] - 1, from[0])
                    firstDay = f.toDateString();
                }
                if ($('#datetimepicker12').val() != null && $('#datetimepicker12').val() != "") {
                    var to = $("#datetimepicker12").val().split("/")
                    var t = new Date(to[2], to[1] - 1, to[0])
                    lastDay = t.toDateString();
                }
            }
            else {
                $('#colpfrom').addClass('collapse');
                $('#colpto').addClass('collapse');

            }
            var hosdoccode = "";
            if ($('#hosDoctor').val() != null && $('#hosDoctor').val() != "") {
                hosdoccode = $('#hosDoctor').val();
            }
            var Appointment = "";
            if ($('#Appointment').val() != null && $('#Appointment').val() != "") {
                Appointment = $('#Appointment').val();
            }
            url = "/CancelAppointment/GetfilterBulkAppointment?fromdate=" + firstDay + " &todate=" + lastDay + " &hosdoccode=" + hosdoccode + " &appointment=" + Appointment + "";
            $.ajax({
                url: url,
                datatype: 'json',
                ContentType: 'application/json;utf-8'
            }).done(function (datahtml) {
                $('.loadingimg').css('display', 'none');
                $(".bindtable").empty();
                $(".bindtable").html($(datahtml).find(".bindtable").html());
                $(".datatable").dataTable();
                //SetDataTableFillter();
            });
        }
        function submit(Uniqrow) {
            debugger;
            $.post("/Dashboard/SetParaValue", { Para: Uniqrow }, function () { window.open('/HMSDoctorAppointment/EditHMSDoctorAppointment', '_self') });
        }
    </script>
}
