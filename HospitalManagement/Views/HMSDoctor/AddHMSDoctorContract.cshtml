@model HospitalManagement.Models.HMSDocotContract
@{
    ViewBag.Title = "AddHMSDoctorContract";
}

<div class="content">
    <div class="row">
        <div class="col-lg-12">
            <h4 class="page-title">Add Contract Doctors</h4>
        </div>
    </div>

    @using (Ajax.BeginForm("AddDoctorContract", "HMSDoctor", new AjaxOptions { HttpMethod = "POST", OnSuccess = "SuccessMethod", LoadingElementId = "progress" }))
    {
        @Html.AntiForgeryToken()

        <div class="row employee-form m-0">
            <div class="col-lg-12">
                <form>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Doctor Name</label>
                                @Html.ValidationMessageFor(model => model.EmployeeCode, "", new { @class = "text-danger" })
                                @Html.DropDownListFor(model => model.EmployeeCode, new SelectList(Model.DoctorContractlist, "employee_code", "doctor_code"), "Select Doctor", new { @class = "form-control select requiredSelect", @id = "Doctor" })

                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Visit Fees <span class="text-danger"> @Html.ValidationMessageFor(model => model.VisitFees, "", new { @class = "text-danger" })</span></label>
                                @Html.TextBoxFor(model => model.VisitFees, new { @type = "number", @class = "form-control" })
                                <i class="fa fa-money"></i>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label>Followup Fees <span class="text-danger">@Html.ValidationMessageFor(model => model.FollowupFees, "", new { @class = "text-danger" })</span></label>
                                @Html.TextBoxFor(model => model.FollowupFees, new { @type = "number", @class = "form-control" })
                                <i class="fa fa-money"></i>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label> Follow Policy(Days)<span class="text-danger">@Html.ValidationMessageFor(model => model.FollowPolicy, "", new { @class = "text-danger" })</span></label>
                                @{
                                    List<SelectListItem> listFollowPolicy = new List<SelectListItem>();
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "1",
                                        Value = "1"
                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "2",
                                        Value = "2",

                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "3",
                                        Value = "3",

                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "4",
                                        Value = "4",

                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "5",
                                        Value = "5",

                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "6",
                                        Value = "6",

                                    });
                                    listFollowPolicy.Add(new SelectListItem
                                    {
                                        Text = "7",
                                        Value = "7",

                                    });
                                }
                                @Html.DropDownList("FollowPolicy", listFollowPolicy, "Select Policy", new { @class = "form-control select requiredSelect" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="display-block">Online Apoint Allow</label>
                                <div class="form-check form-check-inline">
                                    <label class="form-check-label" for="product_active">
                                        @Html.RadioButtonFor(model => model.OnlineApointAllow, true, new { @id = "InYes" })
                                        Yes
                                    </label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <label class="form-check-label" for="product_inactive">
                                        @Html.RadioButtonFor(model => model.OnlineApointAllow, false, new { @id = "InNo" })
                                        No
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group">
                                <label> Appointmnt Slot(Time)<span class="text-danger">@Html.ValidationMessageFor(model => model.AppointmentSlot, "", new { @class = "text-danger" })</span></label>
                                @Html.TextBoxFor(model => model.AppointmentSlot, new { @type = "number", @min = "5", @max = "60", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Prefix For Walking Appointment <span class="text-danger"> @Html.ValidationMessageFor(model => model.Prefix, "", new { @class = "text-danger" })</span></label>
                                @Html.TextBoxFor(model => model.Prefix, new { @class = "form-control", @maxlength = "4", @style = "text-transform:uppercase", @id = "Prefix" })
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Doctor Comission Category</label>
                                @Html.DropDownListFor(model => model.doctor_comission_id, new SelectList(Model.doctor_Comission_Category, "Id", "ComissionName"), "Select Comission Category", new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="col-sm-6">
                            <div class="form-group">
                                <label class="display-block">Status</label>
                                <div class="form-check form-check-inline">
                                    <label class="form-check-label" for="product_active">
                                        @Html.RadioButtonFor(model => model.Ctrl, 1, new { @id = "active" })
                                        Active
                                    </label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <label class="form-check-label" for="product_inactive">
                                        @Html.RadioButtonFor(model => model.Ctrl, 0, new { @id = "Inactive" })
                                        InActive
                                    </label>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="m-t-20 text-center">
                        <button type="submit" class="btn skin-gradient-btn submit-btn">Save</button>
                        <a class="btn skin-border-btn submit-btn m-l-15 res-479-m-t-10" href="~/HMSDoctor/HMSDoctorContractList"><i class="fa fa-arrow-left"></i> Back To List</a>
                    </div>
                    <div id="cardbox" class="card-box" hidden>

                    </div>

                </form>
            </div>
        </div>
    }
</div>
@section scripts{
    <script type="text/javascript">

        //$(".Doctors").addClass("subdrop");
        //$(".Submenu_Doctors").css("display", "block");
        //$(".Submenu_Doctors").css("display", "block");
        //$(".AddHMSDoctorContract").addClass("active");

        $(document).ready(function () {
              $("#Doctor").select2();
            $("#Prefix").keypress(function (event) {
                var inputValue = event.charCode;
                if (!(inputValue >= 65 && inputValue <= 120) && (inputValue != 32 && inputValue != 0)) {
                    event.preventDefault();
                }
            });
        });

        function OnlyNumeric(e) {
            debugger;

            if ((e.which < 48 || e.which > 57)) {
                if (e.which == 8 || e.which == 46 || e.which == 0) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        function ajaxbegin() {

        }
        function SuccessMethod(data) {
            debugger;
            var htmlstr = "";
            if (data == "Record Added Successfully!") {
                $('#cardbox').removeAttr('hidden');
                htmlstr = "<div class='alert alert-success alert-dismissible fade show' role='alert'> <strong>Success!</strong> Your <a href='#' class='alert-link'></a> <span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
            }
            else if (data == "Record Not Saved!") {
                $('#cardbox').removeAttr('hidden');
                htmlstr = "<div class='alert alert-danger alert-dismissible fade show' role='alert'> <strong>Error!</strong> problem <a href='#' class='alert-link'></a>  has been occurred while submitting your data :<span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
            }
            else if (data == "Prefix already exists in this hospital") {
                $('#cardbox').removeAttr('hidden');
                htmlstr = "<div class='alert alert-warning alert-dismissible fade show' role='alert'> <strongPlease read the</strong> comments <a href='#' class='alert-link'></a> <span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
            }
            else {
                $('#cardbox').removeAttr('hidden');
                htmlstr = "<div class='alert alert-warning alert-dismissible fade show' role='alert'> <strongPlease read the</strong> comments <a href='#' class='alert-link'></a> <span id='statusmsg'>" + data + "</span> <button type='button' class='close' data-dismiss='alert' aria-label='Close'><span aria-hidden='true'>&times;</span></button></div > ";
            }
            $("#cardbox").html(htmlstr);
        }
    </script>
}



